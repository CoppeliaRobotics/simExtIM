<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="callbacks.xsl"?>

<plugin name="Image" short-name="IM" author="federico.ferri.it@gmail.com">
    <description>Plugin for processing images in V-REP</description>
    <enum name="format" item-prefix="fmt" base="3600">
        <item name="_8UC1">
            <description>1 channel, 8 bit unsigned int</description>
        </item>
        <item name="_8UC3">
            <description>3 channels, 8 bit unsigned int</description>
        </item>
        <item name="_8UC4">
            <description>4 channels, 8 bit unsigned int</description>
        </item>
        <item name="_32FC1">
            <description>1 channel, 32 bit float</description>
        </item>
        <item name="_32FC3">
            <description>3 channels, 32 bit float</description>
        </item>
        <item name="_32FC4">
            <description>4 channels, 32 bit float</description>
        </item>
    </enum>
    <command name="create">
        <description>Create an image with given size</description>
        <params>
            <param name="width" type="int">
                <description>width</description>
            </param>
            <param name="height" type="int">
                <description>height</description>
            </param>
            <param name="format" type="int" default="sim_im_fmt_8UC3">
                <description>image format (see <enum-ref name="format" />)</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
        </return>
    </command>
    <command name="destroy">
        <description>Destroy (i.e.: free memory) an image with given handle</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="read">
        <description>Read an image from the specified file.</description>
        <params>
            <param name="filename" type="string">
                <description>file name</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
        </return>
    </command>
    <command name="write">
        <description>Write the image with given handle to a file.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="filename" type="string">
                <description>file name</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="convert">
        <description>Convert the image to a different format.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="format" type="int">
                <description>target image format (see <enum-ref name="format" />)</description>
            </param>
            <param name="scale" type="float" default="1.0">
                <description>scale factor</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="rgb2gray">
        <description>Convert the specified RGB image to gray.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="gray2rgb">
        <description>Convert the specified grayscale image to RGB.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="rgb2hsv">
        <description>Convert the specified RGB image to HSV.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="hsv2rgb">
        <description>Convert the specified HSV image to RGB.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="rgb2hls">
        <description>Convert the specified RGB image to HLS.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="hls2rgb">
        <description>Convert the specified HLS image to RGB.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="in_place" type="bool" default="false">
                <description>if true, the original immage will be converted in place. otherwise, the original image will not be modified and a new image is returned.</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to the converted image</description>
            </param>
        </return>
    </command>
    <command name="split">
        <description>Split a multichannel image.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
        </params>
        <return>
            <param name="handles" type="table" item-type="int">
                <description>handles to individual channel images</description>
            </param>
        </return>
    </command>
    <command name="merge">
        <description>Merge many single channel images into a multichannel image.</description>
        <params>
            <param name="handles" type="table" item-type="int">
                <description>handles to individual channel images</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to merged image</description>
            </param>
        </return>
    </command>
    <command name="mixChannels">
        <description>Mix many single channel images into many multichannel images.</description>
        <params>
            <param name="inputHandles" type="table" item-type="int">
                <description>handles to input images</description>
            </param>
            <param name="outputHandles" type="table" item-type="int">
                <description>handles to output images</description>
            </param>
            <param name="fromTo" type="table" item-type="int">
                <description>array of index pairs, i.e. {src1,dst1,src2,dst2,...,srcN,dstN}. see <a href="http://docs.opencv.org/2.4/modules/core/doc/operations_on_arrays.html#void%20mixChannels(const%20Mat*%20src,%20size_t%20nsrcs,%20Mat*%20dst,%20size_t%20ndsts,%20const%20int*%20fromTo,%20size_t%20npairs)">here</a> for details</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <enum name="interp" item-prefix="interp_" base="1200">
        <item name="nearest">
            <description>nearest-neighbor interpolation</description>
        </item>
        <item name="linear">
            <description>bilinear interpolation</description>
        </item>
        <item name="area">
            <description>resampling using pixel area relation (best for shrinking)</description>
        </item>
        <item name="cubic">
            <description>bicubic interpolation over 4x4 pixel neighborhood</description>
        </item>
        <item name="lanczos4">
            <description>Lanczos interpolation over 8x8 pixel neighborhood</description>
        </item>
    </enum>
    <command name="resize">
        <description>Resize an image and return the resized image (original image is not modified).</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="width" type="int">
                <description>width of the new image</description>
            </param>
            <param name="height" type="int">
                <description>height of the new image</description>
            </param>
            <param name="interpolation" type="int" default="sim_im_interp_linear">
                <description>type of interpolation (see <enum-ref name="interp" />)</description>
            </param>
        </params>
        <return>
            <param name="handle" type="int">
                <description>handle to resized image</description>
            </param>
        </return>
    </command>
    <command name="size">
        <description>Get the size of an image.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
        </params>
        <return>
            <param name="width" type="int">
                <description>width of the new image</description>
            </param>
            <param name="height" type="int">
                <description>height of the new image</description>
            </param>
        </return>
    </command>
    <command name="copy">
        <description>Copy a (portion of) image to another image.</description>
        <params>
            <param name="srcHandle" type="int">
                <description>handle to source image</description>
            </param>
            <param name="srcx" type="int">
                <description>x offset in the source image</description>
            </param>
            <param name="srcy" type="int">
                <description>y offset in the source image</description>
            </param>
            <param name="dstHandle" type="int">
                <description>handle to destination image</description>
            </param>
            <param name="dstx" type="int">
                <description>x offset in the destination image</description>
            </param>
            <param name="dsty" type="int">
                <description>y offset in the destination image</description>
            </param>
            <param name="width" type="int">
                <description>width of the copied region</description>
            </param>
            <param name="height" type="int">
                <description>height of the copied region</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="line">
        <description>Draw a line segment between (x1,y1) and (x2,y2) points in the image.</description>
        <params>
            <param name="handle" type="int">
                <description>handle to image</description>
            </param>
            <param name="x1" type="int">
                <description>x coordinate of first point</description>
            </param>
            <param name="y1" type="int">
                <description>y coordinate of first point</description>
            </param>
            <param name="x2" type="int">
                <description>x coordinate of second point</description>
            </param>
            <param name="y2" type="int">
                <description>y coordinate of second point</description>
            </param>
            <param name="r" type="int" default="255">
                <description>red component (0..255)</description>
            </param>
            <param name="g" type="int" default="255">
                <description>green component (0..255)</description>
            </param>
            <param name="b" type="int" default="255">
                <description>blue component (0..255)</description>
            </param>
            <param name="thickness" type="int" default="1">
                <description>line thickness</description>
            </param>
            <param name="type" type="int" default="8">
                <description>type of the line (8 for 8-connected line, 4 for 4-connected line, or 16 for antialiased line)</description>
            </param>
            <param name="shift" type="int" default="0">
                <description>number of fractional bits in the point coordinates</description>
            </param>
        </params>
        <return>
        </return>
    </command>
</plugin>
